// Copyright 2021 IBM Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kserve/modelmesh-runtime-adapter/internal/proto/triton (interfaces: GRPCInferenceServiceServer)

// Package mock_triton is a generated GoMock package.
package mock_triton

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	inference "github.com/kserve/modelmesh-runtime-adapter/internal/proto/triton"
	reflect "reflect"
)

// MockGRPCInferenceServiceServer is a mock of GRPCInferenceServiceServer interface
type MockGRPCInferenceServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockGRPCInferenceServiceServerMockRecorder
}

// MockGRPCInferenceServiceServerMockRecorder is the mock recorder for MockGRPCInferenceServiceServer
type MockGRPCInferenceServiceServerMockRecorder struct {
	mock *MockGRPCInferenceServiceServer
}

// NewMockGRPCInferenceServiceServer creates a new mock instance
func NewMockGRPCInferenceServiceServer(ctrl *gomock.Controller) *MockGRPCInferenceServiceServer {
	mock := &MockGRPCInferenceServiceServer{ctrl: ctrl}
	mock.recorder = &MockGRPCInferenceServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGRPCInferenceServiceServer) EXPECT() *MockGRPCInferenceServiceServerMockRecorder {
	return m.recorder
}

// CudaSharedMemoryRegister mocks base method
func (m *MockGRPCInferenceServiceServer) CudaSharedMemoryRegister(arg0 context.Context, arg1 *inference.CudaSharedMemoryRegisterRequest) (*inference.CudaSharedMemoryRegisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CudaSharedMemoryRegister", arg0, arg1)
	ret0, _ := ret[0].(*inference.CudaSharedMemoryRegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CudaSharedMemoryRegister indicates an expected call of CudaSharedMemoryRegister
func (mr *MockGRPCInferenceServiceServerMockRecorder) CudaSharedMemoryRegister(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CudaSharedMemoryRegister", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).CudaSharedMemoryRegister), arg0, arg1)
}

// CudaSharedMemoryStatus mocks base method
func (m *MockGRPCInferenceServiceServer) CudaSharedMemoryStatus(arg0 context.Context, arg1 *inference.CudaSharedMemoryStatusRequest) (*inference.CudaSharedMemoryStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CudaSharedMemoryStatus", arg0, arg1)
	ret0, _ := ret[0].(*inference.CudaSharedMemoryStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CudaSharedMemoryStatus indicates an expected call of CudaSharedMemoryStatus
func (mr *MockGRPCInferenceServiceServerMockRecorder) CudaSharedMemoryStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CudaSharedMemoryStatus", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).CudaSharedMemoryStatus), arg0, arg1)
}

// CudaSharedMemoryUnregister mocks base method
func (m *MockGRPCInferenceServiceServer) CudaSharedMemoryUnregister(arg0 context.Context, arg1 *inference.CudaSharedMemoryUnregisterRequest) (*inference.CudaSharedMemoryUnregisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CudaSharedMemoryUnregister", arg0, arg1)
	ret0, _ := ret[0].(*inference.CudaSharedMemoryUnregisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CudaSharedMemoryUnregister indicates an expected call of CudaSharedMemoryUnregister
func (mr *MockGRPCInferenceServiceServerMockRecorder) CudaSharedMemoryUnregister(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CudaSharedMemoryUnregister", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).CudaSharedMemoryUnregister), arg0, arg1)
}

// ModelConfig mocks base method
func (m *MockGRPCInferenceServiceServer) ModelConfig(arg0 context.Context, arg1 *inference.ModelConfigRequest) (*inference.ModelConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelConfig", arg0, arg1)
	ret0, _ := ret[0].(*inference.ModelConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelConfig indicates an expected call of ModelConfig
func (mr *MockGRPCInferenceServiceServerMockRecorder) ModelConfig(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelConfig", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ModelConfig), arg0, arg1)
}

// ModelInfer mocks base method
func (m *MockGRPCInferenceServiceServer) ModelInfer(arg0 context.Context, arg1 *inference.ModelInferRequest) (*inference.ModelInferResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelInfer", arg0, arg1)
	ret0, _ := ret[0].(*inference.ModelInferResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelInfer indicates an expected call of ModelInfer
func (mr *MockGRPCInferenceServiceServerMockRecorder) ModelInfer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelInfer", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ModelInfer), arg0, arg1)
}

// ModelMetadata mocks base method
func (m *MockGRPCInferenceServiceServer) ModelMetadata(arg0 context.Context, arg1 *inference.ModelMetadataRequest) (*inference.ModelMetadataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelMetadata", arg0, arg1)
	ret0, _ := ret[0].(*inference.ModelMetadataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelMetadata indicates an expected call of ModelMetadata
func (mr *MockGRPCInferenceServiceServerMockRecorder) ModelMetadata(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelMetadata", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ModelMetadata), arg0, arg1)
}

// ModelReady mocks base method
func (m *MockGRPCInferenceServiceServer) ModelReady(arg0 context.Context, arg1 *inference.ModelReadyRequest) (*inference.ModelReadyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelReady", arg0, arg1)
	ret0, _ := ret[0].(*inference.ModelReadyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelReady indicates an expected call of ModelReady
func (mr *MockGRPCInferenceServiceServerMockRecorder) ModelReady(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelReady", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ModelReady), arg0, arg1)
}

// ModelStatistics mocks base method
func (m *MockGRPCInferenceServiceServer) ModelStatistics(arg0 context.Context, arg1 *inference.ModelStatisticsRequest) (*inference.ModelStatisticsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelStatistics", arg0, arg1)
	ret0, _ := ret[0].(*inference.ModelStatisticsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelStatistics indicates an expected call of ModelStatistics
func (mr *MockGRPCInferenceServiceServerMockRecorder) ModelStatistics(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelStatistics", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ModelStatistics), arg0, arg1)
}

// ModelStreamInfer mocks base method
func (m *MockGRPCInferenceServiceServer) ModelStreamInfer(arg0 inference.GRPCInferenceService_ModelStreamInferServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelStreamInfer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ModelStreamInfer indicates an expected call of ModelStreamInfer
func (mr *MockGRPCInferenceServiceServerMockRecorder) ModelStreamInfer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelStreamInfer", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ModelStreamInfer), arg0)
}

// RepositoryIndex mocks base method
func (m *MockGRPCInferenceServiceServer) RepositoryIndex(arg0 context.Context, arg1 *inference.RepositoryIndexRequest) (*inference.RepositoryIndexResponse, error) {
	//m.ctrl.T.Helper()
	//ret := m.ctrl.Call(m, "RepositoryIndex", arg0, arg1)
	//ret0, _ := ret[0].(*inference.RepositoryIndexResponse)
	//ret1, _ := ret[1].(error)
	return &inference.RepositoryIndexResponse{}, nil
}

// RepositoryIndex indicates an expected call of RepositoryIndex
func (mr *MockGRPCInferenceServiceServerMockRecorder) RepositoryIndex(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepositoryIndex", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).RepositoryIndex), arg0, arg1)
}

// RepositoryModelLoad mocks base method
func (m *MockGRPCInferenceServiceServer) RepositoryModelLoad(arg0 context.Context, arg1 *inference.RepositoryModelLoadRequest) (*inference.RepositoryModelLoadResponse, error) {
	//m.ctrl.T.Helper()
	//ret := m.ctrl.Call(m, "RepositoryModelLoad", arg0, arg1)
	//ret0, _ := ret[0].(*inference.RepositoryModelLoadResponse)
	//ret1, _ := ret[1].(error)
	return &inference.RepositoryModelLoadResponse{}, nil
}

// RepositoryModelLoad indicates an expected call of RepositoryModelLoad
func (mr *MockGRPCInferenceServiceServerMockRecorder) RepositoryModelLoad(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepositoryModelLoad", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).RepositoryModelLoad), arg0, arg1)
}

// RepositoryModelUnload mocks base method
func (m *MockGRPCInferenceServiceServer) RepositoryModelUnload(arg0 context.Context, arg1 *inference.RepositoryModelUnloadRequest) (*inference.RepositoryModelUnloadResponse, error) {
	//m.ctrl.T.Helper()
	//ret := m.ctrl.Call(m, "RepositoryModelUnload", arg0, arg1)
	//ret0, _ := ret[0].(*inference.RepositoryModelUnloadResponse)
	//ret1, _ := ret[1].(error)
	return &inference.RepositoryModelUnloadResponse{}, nil
}

// RepositoryModelUnload indicates an expected call of RepositoryModelUnload
func (mr *MockGRPCInferenceServiceServerMockRecorder) RepositoryModelUnload(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepositoryModelUnload", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).RepositoryModelUnload), arg0, arg1)
}

// ServerLive mocks base method
func (m *MockGRPCInferenceServiceServer) ServerLive(arg0 context.Context, arg1 *inference.ServerLiveRequest) (*inference.ServerLiveResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServerLive", arg0, arg1)
	ret0, _ := ret[0].(*inference.ServerLiveResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServerLive indicates an expected call of ServerLive
func (mr *MockGRPCInferenceServiceServerMockRecorder) ServerLive(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerLive", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ServerLive), arg0, arg1)
}

// ServerMetadata mocks base method
func (m *MockGRPCInferenceServiceServer) ServerMetadata(arg0 context.Context, arg1 *inference.ServerMetadataRequest) (*inference.ServerMetadataResponse, error) {
	//m.ctrl.T.Helper()
	//ret := m.ctrl.Call(m, "ServerMetadata", arg0, arg1)
	//ret0, _ := ret[0].(*inference.ServerMetadataResponse)
	//ret1, _ := ret[1].(error)
	return &inference.ServerMetadataResponse{Name: "Triton Mock Server", Version: "Mock 2.3"}, nil
}

// ServerMetadata indicates an expected call of ServerMetadata
func (mr *MockGRPCInferenceServiceServerMockRecorder) ServerMetadata(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerMetadata", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ServerMetadata), arg0, arg1)
}

// ServerReady mocks base method
func (m *MockGRPCInferenceServiceServer) ServerReady(arg0 context.Context, arg1 *inference.ServerReadyRequest) (*inference.ServerReadyResponse, error) {
	//m.ctrl.T.Helper()
	//ret := m.ctrl.Call(m, "ServerReady", arg0, arg1)
	//ret0, _ := ret[0].(*inference.ServerReadyResponse)
	//ret1, _ := ret[1].(error)
	return &inference.ServerReadyResponse{Ready: true}, nil
}

// ServerReady indicates an expected call of ServerReady
func (mr *MockGRPCInferenceServiceServerMockRecorder) ServerReady(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerReady", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).ServerReady), arg0, arg1)
}

// SystemSharedMemoryRegister mocks base method
func (m *MockGRPCInferenceServiceServer) SystemSharedMemoryRegister(arg0 context.Context, arg1 *inference.SystemSharedMemoryRegisterRequest) (*inference.SystemSharedMemoryRegisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SystemSharedMemoryRegister", arg0, arg1)
	ret0, _ := ret[0].(*inference.SystemSharedMemoryRegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SystemSharedMemoryRegister indicates an expected call of SystemSharedMemoryRegister
func (mr *MockGRPCInferenceServiceServerMockRecorder) SystemSharedMemoryRegister(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SystemSharedMemoryRegister", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).SystemSharedMemoryRegister), arg0, arg1)
}

// SystemSharedMemoryStatus mocks base method
func (m *MockGRPCInferenceServiceServer) SystemSharedMemoryStatus(arg0 context.Context, arg1 *inference.SystemSharedMemoryStatusRequest) (*inference.SystemSharedMemoryStatusResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SystemSharedMemoryStatus", arg0, arg1)
	ret0, _ := ret[0].(*inference.SystemSharedMemoryStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SystemSharedMemoryStatus indicates an expected call of SystemSharedMemoryStatus
func (mr *MockGRPCInferenceServiceServerMockRecorder) SystemSharedMemoryStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SystemSharedMemoryStatus", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).SystemSharedMemoryStatus), arg0, arg1)
}

// SystemSharedMemoryUnregister mocks base method
func (m *MockGRPCInferenceServiceServer) SystemSharedMemoryUnregister(arg0 context.Context, arg1 *inference.SystemSharedMemoryUnregisterRequest) (*inference.SystemSharedMemoryUnregisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SystemSharedMemoryUnregister", arg0, arg1)
	ret0, _ := ret[0].(*inference.SystemSharedMemoryUnregisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SystemSharedMemoryUnregister indicates an expected call of SystemSharedMemoryUnregister
func (mr *MockGRPCInferenceServiceServerMockRecorder) SystemSharedMemoryUnregister(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SystemSharedMemoryUnregister", reflect.TypeOf((*MockGRPCInferenceServiceServer)(nil).SystemSharedMemoryUnregister), arg0, arg1)
}
